#include "test_runner.h"

#include <vector>

using std::vector;

bool IsMonotonic(const vector<double>& l) {
  bool incr = false;
  bool decr = false;
  for (size_t i = 1; i < l.size(); ++i) {
    if (l[i] > l[i - 1]) {
      incr = true;
    }
    if (l[i] < l[i - 1]) {
      decr = true;
    }
  }
  return !(incr && decr);
}

void Test() {
  vector<double> l = {1.0, 2.0, 4.0, 10.0};
  ASSERT_EQUAL(IsMonotonic(l), true);
  l = {1.0, 2.0, 4.0, 20.0};
  ASSERT_EQUAL(IsMonotonic(l), true);
  l = {1.0, 20.0, 4.0, 10.0};
  ASSERT_EQUAL(IsMonotonic(l), false);
  l = {4.0, 1.0, 0.0, -10.0};
  ASSERT_EQUAL(IsMonotonic(l), true);
  l = {4.0, 1.0, 1.0, 0.0};
  ASSERT_EQUAL(IsMonotonic(l), true);
  l = {1.0, 2.0, 3.0, 2.0, 5.0, 60.0};
  ASSERT_EQUAL(IsMonotonic(l), false);
  l = {1.0, 2.0, 3.0, 4.0, 5.0, 60.0};
  ASSERT_EQUAL(IsMonotonic(l), true);
  l = {9.0, 9.0, 9.0, 9.0};
  ASSERT_EQUAL(IsMonotonic(l), true);
}

int main() {
  TestRunner tr;
  RUN_TEST(tr, Test);
  return 0;
}

/*

[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
